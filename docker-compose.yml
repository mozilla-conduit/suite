# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

services:
  #########################
  # BMO Containers
  #########################

  bmo.test:
    platform: linux/x86_64
    image: mozillabteam/bmo:latest
    command: demo
    volumes:
      - bmo-data-dir:/app/data
    environment: &bmo_env
      BMO_db_host: bmo.db
      BMO_db_name: bugs
      BMO_db_pass: bugs
      BMO_db_user: bugs
      BMO_inbound_proxies: "*"
      BMO_memcached_namespace: bugzilla
      BMO_memcached_servers: memcached:11211
      BMO_urlbase: http://bmo.test/
      BUGZILLA_ALLOW_INSECURE_HTTP: 1
      BZ_ANSWERS_FILE: /app/conf/checksetup_answers_suite.txt
      CONDUIT_USER_API_KEY: zQ5TSBzq7tTZMtKYq9K1ZqJMjifKx3cPL7pIGk9Q
      CONDUIT_USER_LOGIN: conduit@mozilla.bugs
      CONDUIT_USER_PASSWORD: password123456789!
      HTTP_BACKEND: simple
      HTTPD_MaxClients: 1
      HTTPD_MaxRequestsPerChild: 4000
      HTTPD_MaxSpareServers: 1
      HTTPD_MinSpareServers: 1
      HTTPD_ServerLimit: 1
      HTTPD_StartServers: 1
      LOCALCONFIG_ENV: 1
      LOG4PERL_CONFIG_FILE: log4perl-suite.conf
      LOGGING_PORT: 5880
      PHABRICATOR_API_KEY: api-qdaethogwpld3wmn2cnhbh57wkux
      PHABRICATOR_APP_ID: 66365490f364fbafba439619f0f31b7a4a0d73528c485520adf3b295f934acda
      PHABRICATOR_AUTH_CALLBACK_URL: http://phabricator.test/auth/login/bmo:bmo.test/
      PHABRICATOR_BOT_API_KEY: 8G4ly8JkxbypZgh5XrdiHWExVEjPq5S3HvMBll1K
      PHABRICATOR_BOT_LOGIN: phab-bot@bmo.tld
      PHABRICATOR_BOT_PASSWORD: password123456789!
      PHABRICATOR_OAUTH_ID: 6iaYNVorOeYQaQ5vkwyC
      PHABRICATOR_OAUTH_SECRET: QNzdU5eRuhlHotvkh8KBgtR3yqxMG3czKfNks1qt
      PORT: 80
    healthcheck:
      test: ["CMD", "curl", "-sfk", "http://localhost", "-o/dev/null" ]
    depends_on:
      bmo.db:
        condition: service_healthy
      memcached:
        condition: service_started
      tinyproxy:
        condition: service_started

  bmo.feed:
    platform: linux/x86_64
    image: mozillabteam/bmo:latest
    command:
      - perl
      - extensions/PhabBugz/bin/phabbugz_feed.pl
      - start
      - '-d'
      - '-f'
    healthcheck:
      disable: true  # the image uses an HTTP check, which this command doesn't fullfil
    volumes:
      - bmo-data-dir:/app/data
    environment: *bmo_env
    restart: on-failure
    depends_on:
      - phabricator.test
      - bmo.db
      - memcached

  bmo.pushd:
    platform: linux/x86_64
    image: mozillabteam/bmo:latest
    command:
      - perl
      - extensions/Push/bin/bugzilla-pushd.pl
      - start
      - '-d'
      - '-f'
    healthcheck:
      disable: true  # the image uses an HTTP check, which this command doesn't fullfil
    volumes:
      - bmo-data-dir:/app/data
    environment: *bmo_env
    restart: on-failure
    depends_on:
      - phabricator.test
      - bmo.db
      - memcached

  bmo.db:
    platform: linux/x86_64
    image: mysql:8
    volumes:
      - bmo-mysql-db:/var/lib/mysql
      - "./docker/bmo/mysql:/etc/mysql/conf.d"
    tmpfs:
      - /tmp
    logging:
      driver: "none"
    environment:
      MYSQL_DATABASE: bugs
      MYSQL_USER: bugs
      MYSQL_PASSWORD: bugs
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    healthcheck:
      test: ["CMD", "mysqladmin",  "ping",  "-h", "localhost", "-ubugs", "-pbugs"]
      timeout: 180s

  memcached:
    image: memcached:latest

  #########################
  # Lando Containers
  #########################
  lando:
    image: mozilla/lando:latest  # TODO: this does not exist yet.
    env_file:
      - ../lando/.env
    environment: &base-lando-vars
      DEFAULT_DB_HOST: lando.db
      DEBUG: 1
      ENVIRONMENT: local
      PHABRICATOR_URL: http://phabricator.test
      PHABRICATOR_UNPRIVILEGED_API_KEY: api-lefsv24henzsbzpw337bhizawuyh
    restart: on-failure
    # TODO: bake this command into and ENTRYPOINT script
    command: bash -c "
      lando migrate &&
      lando setup_dev &&
      lando runserver 0.0.0.0:80"
    healthcheck:
      test: [ "CMD", "curl", "-sfko/dev/null", "http://localhost/__heartbeat__" ]
      interval: 10s
      timeout: 60s
      retries: 6
    depends_on:
      lando.db:
        condition: service_healthy
      lando.redis:
        condition: service_healthy
      phabricator.test:
        condition: service_healthy

  lando.hg-landing-worker:
    image: mozilla/lando:latest  # TODO: this does not exist yet.
    command: lando start_landing_worker hg
    env_file:
      - ../lando/.env
    environment:
      <<: *base-lando-vars
      DEFAULT_GRACE_SECONDS: 10
      LANDING_WORKER_USERNAME: app
      LANDING_WORKER_TARGET_SSH_PORT: 8022
      SSH_PRIVATE_KEY: |
        -----BEGIN EC PRIVATE KEY-----
        MHcCAQEEIMiMNKEkf0vr4HrhUIrq0e9NjGNPArN7L1uy/HQZ1dA8oAoGCCqGSM49
        AwEHoUQDQgAEdakNgjerNLFXy1uMfwLjPd5/pBTbIEoZMdMV/o6s+uoMg776LF+v
        gtbfIaZbhDcJElzHwpnqGfHYU+cM4KyurA==
        -----END EC PRIVATE KEY-----
    restart: on-failure
    depends_on:
      lando:
        condition: service_healthy
      lando.db:
        condition: service_healthy
    volumes:
      - /files/repos

  lando.db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    volumes:
      - lando-postgres-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 1s
      timeout: 1s
      retries: 10

  lando.redis:
    image: redis:7.2
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

  lando.celery:
    image: mozilla/lando:latest  # TODO: this does not exist yet.
    command: lando start_celery_worker
    depends_on:
      lando.redis:
        condition: service_healthy

  ###############################
  # Phabricator Containers
  ###############################

  phabricator:
    platform: linux/x86_64
    image: mozillaconduit/phabricator:latest
    entrypoint: /app/entrypoint.sh
    command: dev_start
    environment:
      MYSQL_HOST: phab.db
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASS: password
      PHABRICATOR_URI: http://phabricator.test/
      PHABRICATOR_CDN_URI: http://phabricator.test/
      BUGZILLA_URL: http://bmo.test
      BUGZILLA_AUTOMATION_USER: phab-bot@bmo.tld
      BUGZILLA_AUTOMATION_API_KEY: 8G4ly8JkxbypZgh5XrdiHWExVEjPq5S3HvMBll1K
    volumes:
      - phabricator-nginx:/app/nginx
    restart: on-failure
    depends_on:
      phab.db:
        condition: service_healthy

  phab.db:
    platform: linux/x86_64
    image: mysql:5.7
    volumes:
      - phabricator-mysql-db:/var/lib/mysql
      - "./docker/phabricator/mysql:/etc/mysql/conf.d:ro"
      - ./docker/phabricator/demo.sql.gz:/docker-entrypoint-initdb.d/demo.sql.gz
    environment:
      - MYSQL_ROOT_PASSWORD=password
    healthcheck:
      test: ["CMD", "mysqladmin",  "ping",  "-h", "localhost", "-ppassword"]
      interval: 10s
      timeout: 120s
      retries: 13
    restart: on-failure
    ports:
      - "3306:3306"

  ###############################
  # Transplant services
  ###############################

  autoland.treestatus:
    image: mozilla/autolandtreestatus:latest
    restart: always

  autoland.hg-init:
    image: mozilla/autolandhg:latest
    environment:
      ARCCONFIG: y
      PHABRICATOR_URI: http://phabricator.test
    command: init
    volumes:
      - autoland-hg:/repos

  autoland.hg:
    image: mozilla/autolandhg:latest
    command: start
    restart: always
    environment:
      SSH_PUBLIC_KEY: "ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBHWpDYI3qzSxV8tbjH8C4z3ef6QU2yBKGTHTFf6OrPrqDIO++ixfr4LW3yGmW4Q3CRJcx8KZ6hnx2FPnDOCsrqw="
    ports:
      - "8201:8000"
    volumes:
      - autoland-hg:/repos
    depends_on:
      - autoland.hg-init

  ###########################
  # LOCAL-DEV
  # Provide an ability to run all CLI developer needs:
  # * CVS push/pull to autoland.hg
  # * moz-phab to phabricator.test
  ###########################

  local-dev:
    build:
      context: docker/local-dev
      dockerfile: ./Dockerfile
    environment:
      HTTP_ALLOWED: 1
    volumes:
      - local-dev:/home/phab
    depends_on:
      - tinyproxy
      - phabricator.test
      - bmo.test
      - bmo.feed
      - bmo.pushd
      - autoland.hg.test

  ###########################
  # Proxy containers
  ###########################

  tinyproxy:
    platform: linux/x86_64
    build:
      context: docker/tinyproxy
      dockerfile: ./Dockerfile
    ports:
      - "1080:1080"

  phabricator.test:
    platform: linux/x86_64
    image: nginx:alpine
    volumes:
      - "./docker/phabricator/site.conf:/etc/nginx/conf.d/default.conf:ro"
      - phabricator-nginx:/app/nginx
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-sfk", "http://localhost", "-H", "Host: phabricator.test", "-o/dev/null"]
    depends_on:
      - phabricator
      - tinyproxy

  lando.test:
    platform: linux/x86_64
    image: nginx:alpine
    container_name: lando.test
    volumes:
      - "./docker/lando/site.conf:/etc/nginx/conf.d/default.conf:ro"
    restart: on-failure
    depends_on:
      - lando
      - tinyproxy

  autoland.hg.test:
    platform: linux/x86_64
    image: nginx:alpine
    container_name: hg.test
    volumes:
      - "./docker/autoland-hg/site.conf:/etc/nginx/conf.d/default.conf:ro"
      - autoland-hg:/repos
    restart: on-failure
    depends_on:
      - autoland.hg
      - tinyproxy

  product-details.test:
    platform: linux/x86_64
    image: nginx:alpine
    container_name: product-details.test
    volumes:
      - ./docker/product-details/site.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/product-details/1.0:/www/data/1.0
    restart: on-failure
    depends_on:
      - tinyproxy

volumes:
  phabricator-nginx:
  phabricator-mysql-db:
  lando-postgres-db:
  local-dev:
  bmo-mysql-db:
  bmo-data-dir:
  autoland-hg:
  caches_cache:
